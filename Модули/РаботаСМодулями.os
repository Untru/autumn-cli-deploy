Функция ОбработкиИзРепозитория(НастройкиВыполнения) Экспорт
	
	ОбработкиРепозитория = Новый Соответствие();
	ПутьКРепозиторию = НастройкиВыполнения["ПутьКРепозиторию"];
	
	Путь = СтрШаблон("%1\%2", ПутьКРепозиторию, "src\epf");
	Маска = "*.xml";
	
	Файлы = НайтиФайлы(Путь, Маска, Ложь);
	
	Для Каждого Файл Из Файлы Цикл
		
		НомерВерсии = "";
		ИмяОбработки = Файл.ИмяБезРасширения;
		ПутьКМодулюОбъекта = СтрШаблон("%1/%2/Ext/ObjectModule.bsl", Файл.Путь, ИмяОбработки);
		
		Текст = Новый ЧтениеТекста();
		Текст.Открыть(ПутьКМодулюОбъекта, КодировкаТекста.UTF8NoBOM);
		
		ТекстМодуля = Текст.Прочитать();
		ТекстМодуля = СокрЛП(ТекстМодуля);
		Текст.Закрыть();
		
		РегуляркаОбластьВерсии = Новый РегулярноеВыражение("Регистрация\.Версия\s*=\s*""\d+(\.\d+)?");
		РегуляркаОбластьВерсии.Многострочный = Истина;
		РегуляркаОбластьВерсии.ИгнорироватьРегистр = Истина;
		
		КоллекцияСовпадений = РегуляркаОбластьВерсии.НайтиСовпадения(ТекстМодуля);
		Если КоллекцияСовпадений.Количество() > 0 Тогда
			РегуляркаВерсия = Новый РегулярноеВыражение("\d+(\.\d+)?");
			РегуляркаВерсия.Многострочный = Истина;
			РегуляркаВерсия.ИгнорироватьРегистр = Истина;
			
			КоллекцияСовпаденийВерсии = РегуляркаВерсия.НайтиСовпадения(КоллекцияСовпадений[0].Значение);
			НомерВерсии = КоллекцияСовпаденийВерсии[0].Значение;
		КонецЕсли;
		ОбработкиРепозитория.Вставить(ИмяОбработки, НомерВерсии);
	КонецЦикла;
	
	Возврат ОбработкиРепозитория;
	
КонецФункции

Процедура ДобавитьНовуюВерсиюОбработке(ПапкаСОбработкой, ТекстКоммита, АвторКоммита) Экспорт
	
	Возврат; // Отключил пока что обновление версии до более хорошей реализации
	
	ПутьКМодулюОбъекта = ПапкаСОбработкой + "\Ext\ObjectModule.bsl";
	
	Текст = Новый ЧтениеТекста();
	Текст.Открыть(ПутьКМодулюОбъекта, КодировкаТекста.UTF8NoBOM);
	
	ТекстМодуля = Текст.Прочитать();
	ТекстМодуля = СокрЛП(ТекстМодуля);
	Текст.Закрыть();
	
	РегуляркаОбластьВерсии = Новый РегулярноеВыражение("Регистрация\.Версия\s*=\s*""\d+(\.\d+)?");
	РегуляркаОбластьВерсии.Многострочный = Истина;
	РегуляркаОбластьВерсии.ИгнорироватьРегистр = Истина;
	
	КоллекцияСовпадений = РегуляркаОбластьВерсии.НайтиСовпадения(ТекстМодуля);
	Если КоллекцияСовпадений.Количество() > 0 Тогда
		РегуляркаВерсия = Новый РегулярноеВыражение("\d+(\.\d+)?");
		РегуляркаВерсия.Многострочный = Истина;
		РегуляркаВерсия.ИгнорироватьРегистр = Истина;
		
		КоллекцияСовпаденийВерсии = РегуляркаВерсия.НайтиСовпадения(КоллекцияСовпадений[0].Значение);
		НомерВерсии = КоллекцияСовпаденийВерсии[0].Значение;
		ФинальныйНомер = Формат(ТекущаяДата(), "ДФ=yyyyMMdd");
		СтрокаСНомером = КоллекцияСовпадений[0].Значение;
		
		Если СтрДлина(НомерВерсии) > 8 И Лев(НомерВерсии, 8) = ФинальныйНомер Тогда
			НомерПодверсии = Число(Сред(НомерВерсии, 10, 1));
			СледующийНомер = НомерПодверсии + 1;
			ФинальныйНомер = Лев(НомерВерсии, 9) + СледующийНомер;
		ИначеЕсли НомерВерсии = ФинальныйНомер Тогда
			ФинальныйНомер = СтрШаблон("%1.1", ФинальныйНомер);
		КонецЕсли;
		
		НоваяСтрокаСНомером = СтрЗаменить(СтрокаСНомером, НомерВерсии, ФинальныйНомер);
		ТекстМодуля = СтрЗаменить(ТекстМодуля, СтрокаСНомером, НоваяСтрокаСНомером);
		
		СтрокаИнформацииОбработки = "ОписаниеИзменений = """;
		//|20240719.6 autor@instiment.ru Текст комментария
		СтрокаКомментарий = СтрШаблон("%1%2	|%3 %4 %5", СтрокаИнформацииОбработки,
				Символы.ПС,
				ФинальныйНомер,
				АвторКоммита,
				ТекстКоммита
			);
		
		ТекстМодуля = СтрЗаменить(ТекстМодуля, СтрокаИнформацииОбработки, СтрокаКомментарий);
		
		ЗаписьТекста = Новый ЗаписьТекста(ПутьКМодулюОбъекта, КодировкаТекста.UTF8NoBOM, , , Символы.ПС);
		ЗаписьТекста.Записать(ТекстМодуля);
		ЗаписьТекста.Закрыть();
		
	КонецЕсли;
КонецПроцедуры

Процедура ЗаменаСтрокМодуля(ИмяФайла, СоответствиеСтрокЗамен) Экспорт
	
	Для Каждого Элемент Из СоответствиеСтрокЗамен Цикл
		
		Текст = Новый ЧтениеТекста();
		Текст.Открыть(ИмяФайла, КодировкаТекста.UTF8NoBOM);
		ТекстМодуля = Текст.Прочитать();
		Текст.Закрыть();
		ТекстМодуля = СтрЗаменить(ТекстМодуля, Элемент.Ключ,  Элемент.Значение);
		ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8NoBOM, , , Символы.ПС);
		ЗаписьТекста.Записать(ТекстМодуля);
		ЗаписьТекста.Закрыть();

	КонецЦикла;
	
	
КонецПроцедуры